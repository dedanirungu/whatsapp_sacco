<div class="members">
  <div class="bg-white p-6 rounded-lg shadow-md">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-bold">Members</h1>
      <button onclick="showAddMemberModal()" class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded">
        Add Member
      </button>
    </div>

    {{#if error}}
      <div class="text-center py-4 text-red-500">
        <p>{{error}}</p>
      </div>
    {{else if members.length}}
      <table class="min-w-full">
        <thead>
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Phone</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Joined Date</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {{#each members}}
            <tr>
              <td class="px-6 py-4 whitespace-nowrap">{{this.name}}</td>
              <td class="px-6 py-4 whitespace-nowrap">{{this.phone}}</td>
              <td class="px-6 py-4 whitespace-nowrap">{{formatDate this.joined_date}}</td>
              <td class="px-6 py-4 whitespace-nowrap">
                <a href="/members/{{this.id}}" class="text-blue-600 hover:text-blue-900 mr-4">View</a>
                <button onclick="deleteMember({{this.id}})" class="text-red-600 hover:text-red-900">Delete</button>
              </td>
            </tr>
          {{/each}}
        </tbody>
      </table>
    {{else}}
      <div class="text-center py-4">
        <p>No members found. Add your first member to get started.</p>
      </div>
    {{/if}}
  </div>

  <!-- Add Member Modal -->
  <div id="addMemberModal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center">
    <div class="bg-white p-6 rounded-lg shadow-md w-full max-w-md">
      <h2 class="text-xl font-bold mb-4">Add New Member</h2>
      <form id="addMemberForm">
        <div class="mb-4">
          <label class="block text-gray-700 text-sm font-bold mb-2" for="name">Name</label>
          <input type="text" id="memberName" name="name" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
        </div>
        <div class="mb-4">
          <label class="block text-gray-700 text-sm font-bold mb-2" for="phone">Phone</label>
          <input type="text" id="memberPhone" name="phone" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
        </div>
        <div class="flex justify-end">
          <button type="button" onclick="hideAddMemberModal()" class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded mr-2">Cancel</button>
          <button type="submit" class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded">Save</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  // Show modal function
  function showAddMemberModal() {
    document.getElementById('addMemberModal').classList.remove('hidden');
  }
  
  // Hide modal function
  function hideAddMemberModal() {
    document.getElementById('addMemberModal').classList.add('hidden');
  }
  
  // Add member form submission
  document.getElementById('addMemberForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const memberData = {
      name: document.getElementById('memberName').value,
      phone: document.getElementById('memberPhone').value
    };
    
    try {
      const response = await fetch('/api/members', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(memberData)
      });
      
      if (!response.ok) {
        throw new Error('Failed to add member');
      }
      
      // Redirect to refresh the page
      window.location.reload();
    } catch (error) {
      console.error('Error adding member:', error);
      alert('Failed to add member. Please try again.');
    }
  });
  
  // Delete member function
  async function deleteMember(id) {
    if (!confirm('Are you sure you want to delete this member?')) {
      return;
    }
    
    try {
      const response = await fetch(`/api/members/${id}`, {
        method: 'DELETE'
      });
      
      if (!response.ok) {
        throw new Error('Failed to delete member');
      }
      
      // Redirect to refresh the page
      window.location.reload();
    } catch (error) {
      console.error('Error deleting member:', error);
      alert('Failed to delete member. Please try again.');
    }
  }
</script>